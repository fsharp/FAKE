@using System.Linq
@using Newtonsoft.Json

@model Fake.Deploy.Web.SetupInfo

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section scripts {
        <style type="text/css">
            body
            {
                padding-top: 40px;
                padding-bottom: 40px;
                background-color: #f5f5f5;
            }

            .form-setup
            {
                max-width: 450px;
                padding: 19px 29px 29px;
                margin: 0 auto 20px;
                background-color: #fff;
                border: 1px solid #e5e5e5;
                -webkit-border-radius: 5px;
                -moz-border-radius: 5px;
                border-radius: 5px;
                -webkit-box-shadow: 0 1px 2px rgba(0,0,0,.05);
                -moz-box-shadow: 0 1px 2px rgba(0,0,0,.05);
                box-shadow: 0 1px 2px rgba(0,0,0,.05);
            }

                .form-setup .form-setup-heading,
                .form-setup .checkbox
                {
                    margin-bottom: 10px;
                }

                .form-setup input[type="text"],
                .form-setup input[type="password"]
                {
                    font-size: 16px;
                    height: auto;
                    margin-bottom: 15px;
                    padding: 7px 9px;
                }
        </style>
    <script type="text/javascript">
        var metaData = {
            dataProviders : @Html.Raw((JsonConvert.SerializeObject(Model.AvailableDataProviders))),
            dataProviderParameters: @Html.Raw(JsonConvert.SerializeObject(Model.DataProviderParametersDescription)),
            membershipProviders : @Html.Raw((JsonConvert.SerializeObject(Model.AvailableDataProviders))),
            membershipProviderParameters: @Html.Raw(JsonConvert.SerializeObject(Model.MembershipProviderParametersDescription))            
        };
    </script>
    <script src="@Url.Content("~/Scripts/app/Setup.Index.js")" type="text/javascript"></script>
    <script type="text/javascript">
        $(function () {
            var vm = new IndexViewModel();
            ko.applyBindings(vm);
        });
    </script>
}

<div class="form-setup">

<form class="form-horizontal" data-bind="submit: $root.setup">
@Html.ValidationSummary(true)

<fieldset>
    <legend>Setup Fake Deploy</legend>

    <div class="control-group">
        <label class="control-label" for="agentName">Administrator Username</label>
        <div class="controls">
            @Html.EditorFor(model => model.AdministratorUserName)
            @Html.ValidationMessageFor(model => model.AdministratorUserName)
        </div>
    </div>

    <div class="control-group">
        <label class="control-label" for="agentName">Administrator E-mail</label>
        <div class="controls">
            @Html.EditorFor(model => model.AdministratorEmail)
            @Html.ValidationMessageFor(model => model.AdministratorEmail)
        </div>
    </div>

    <div class="control-group">
        <label class="control-label" for="agentName">Administrator Password</label>
        <div class="controls">
            @Html.PasswordFor(model => model.AdministratorPassword)
            @Html.ValidationMessageFor(model => model.AdministratorPassword)
        </div>
    </div>

    <div class="control-group">
        <label class="control-label" for="agentName">Confirm Administrator Password</label>
        <div class="controls">
            @Html.PasswordFor(model => model.ConfirmAdministratorPassword)
            @Html.ValidationMessageFor(model => model.ConfirmAdministratorPassword)
        </div>
    </div>
    
    <div class="control-group">
        <label class="control-label" for="agentName">Data Provider</label>
        <div class="controls">
            
            <select id="dataProvider"
                    data-bind="options: dataProviders,
                    value: selectedDataProvider,
                    optionsCaption: 'Choose...'">                
            </select>
            @Html.ValidationMessageFor(model => model.DataProvider)

        </div>
    </div>
    
    <div class="control-group" data-bind="foreach: dataProviderParameters">
        <label class="control-label" for="agentName" data-bind="text: ParameterName, attr: {title: Description}"></label>
        <div class="controls">
            <input type="text" data-bind="attr: { id: 'dataProviderParameter_' + ParameterName, title:Description }"></input>
            @Html.ValidationMessageFor(model => model.DataProviderParameters)
        </div>
    </div>

    
    <div class="control-group">
        <label class="control-label" for="agentName">Membership Provider</label>
        <div class="controls">
            <select id="membershipProvider"
                    data-bind="options: membershipProviders,
                    value: selectedMembershipProvider,
                    optionsCaption: 'Choose...'">                
            </select>
            @Html.ValidationMessageFor(model => model.MembershipProvider)
        </div>
    </div>

    <div class="control-group" data-bind="foreach: membershipProviderParameters">
        <label class="control-label" for="agentName" data-bind="text: ParameterName, attr: {title:Description}"></label>
        <div class="controls">
            <input type="text" data-bind="attr: { id: 'membershipProviderParameter_' + ParameterName, title:Description }"></input>
            @Html.ValidationMessageFor(model => model.MembershipProviderParameters)
        </div>
    </div>

    <p>
        <button type="submit" class="btn btn-primary"><i class="icon-hdd icon-white"></i>&nbsp;Save Changes</button>
    </p>
</fieldset>
</form>
    </div>

<div id="initDialog" class="modal hide fade">
    <div class="modal-header">
        <span style="padding: 10px">
            <h4>Initializing Fake Deploy Web</h4>
        </span>
    </div>
    <div class="modal-body">
        <div class="progress progress-striped active">
            <div class="bar" style="width: 100%;"></div>
        </div>
    </div>
</div>
